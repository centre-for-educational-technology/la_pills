<?php

use Symfony\Component\Yaml\Yaml;
use Drupal\Core\Database\Database;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_schema().
 */
function la_pills_schema() {
  $schema['session_template'] = [
    'description' => 'Stores data for Session templates.',
    'fields' => [
      'uuid' => [
        'description' => 'Unique identifier for Session template.',
        'type' => 'varchar_ascii',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ],
      'data' => [
        'description' => 'Serialized data for the template.',
        'type' => 'text',
        'serialize' => TRUE,
        'size' => 'medium',
        'not null' => TRUE,
      ],
      'created' => [
        'description' => 'Creation time unix timestamp.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'changed' => [
        'description' => 'Update time unix timestamp.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => ['uuid'],
    'indexes' => [
      'created' => [
        'created',
      ],
      'changed' => [
        'changed',
      ],
    ],
  ];
  $schema['session_questionnaire_answer'] = [
    'description' => 'Stores data for Session questionnaire answers.',
    'fields' => [
      'session_entity_uuid' => [
        'description' => 'Unique identifier for related Session entity.',
        'type' => 'varchar_ascii',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ],
      'questionnaire_uuid' => [
        'description' => 'Unique identifier for related questionnaire.',
        'type' => 'varchar_ascii',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ],
      'question_uuid' => [
        'description' => 'Unique identifier for related question.',
        'type' => 'varchar_ascii',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ],
      'session_id' => [
        'description' => 'Unique identifier for a user session.',
        'type' => 'varchar_ascii',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ],
      'form_build_id' => [
        'description' => 'Unique identifier for a form being submitted.',
        'type' => 'varchar_ascii',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ],
      'user_id' => [
        'description' => 'Unique user identifier or NULL for ananymous users.',
        'type' => 'int',
        'size' => 'normal',
        'not null' => FALSE,
        'default' => NULL,
        'unsigned' => TRUE,
      ],
      'name' => [
        'description' => 'Anonymous user name if required or NULL.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
        'default' => NULL,
      ],
      'answer' => [
        'description' => 'Answer provided.',
        'type' => 'text',
        'size' => 'medium',
        'not null' => FALSE,
      ],
      'created' => [
        'description' => 'Creation time unix timestamp.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
    ],
    'indexes' => [
      'session_entity_uuid' => [
        'session_entity_uuid',
      ],
      'questionnaire_uuid' => [
        'questionnaire_uuid',
      ],
      'question_uuid' => [
        'question_uuid',
      ],
      'session_id' => [
        'session_id',
      ],
      'form_build_id' => [
        'form_build_id'
      ],
      'user_id' => [
        'user_id'
      ],
      'created' => [
        'created',
      ],
    ],
  ];

  return $schema;
}

/**
 * Implements hook_install().
 */
function la_pills_install() {
  $manager = \Drupal::service('la_pills.session_template_manager');

  $templates = file_scan_directory(__DIR__ . '/sessions/', '/.*.yml$/i');

  if ($templates) {
    foreach ($templates as $template) {
      $manager->addTemplate(Yaml::parse(file_get_contents($template->uri)));
    }
  }
}

/**
 * Adds user_id field and index to session_questionnaire_answer table.
 * Adds allow_anonymous_responses field to session_entity.
 */
function la_pills_update_8001() {
  $spec = [
    'description' => 'Unique user identifier or NULL for ananymous users.',
    'type' => 'int',
    'size' => 'normal',
    'not null' => FALSE,
    'default' => NULL,
    'unsigned' => TRUE,
  ];
  $schema = Database::getConnection()->schema();

  $schema->addField('session_questionnaire_answer', 'user_id', $spec);
  $schema->addIndex('session_questionnaire_answer', 'user_id', ['user_id'], [
    'fields' => [
      'user_id' => $spec,
    ],
  ]);

  $allow_anonymous_responses = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Allow anonymous responses'))
    ->setDescription(t('A boolean indicating whether the LA Pills Session allows anonymous answers or requires an authenticated user.'))
    ->setDefaultValue(TRUE)
    ->setInitialValue(TRUE)
    ->setDisplayOptions('form', [
      'type' => 'boolean_checkbox',
      'weight' => 0,
  ]);
  // This initially creates field as NULLABLE and requires applying updates.
  // The line missing is: \Drupal::entityDefinitionUpdateManager()->applyUpdates();
  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('allow_anonymous_responses', 'session_entity', 'la_pills', $allow_anonymous_responses);
}

/**
 * Triggers applyUpdates() method for Entity Definition Update Manager to fix
 * the issue with "Mismatched entity and/or field definitions".
 */
function la_pills_update_8002() {
  \Drupal::entityDefinitionUpdateManager()->applyUpdates();
}

/**
 * Adds code field to session_entity.
 * Sets unique codes for any existing entities.
 */
function la_pills_update_8003() {
  $connection = \Drupal::service('database');
  $update_manager = \Drupal::entityDefinitionUpdateManager();
  $code_manager = \Drupal::service('la_pills.session_entity_code_manager');

  $code = BaseFieldDefinition::create('string')
    ->setLabel(t('Unique numeric code'))
    ->setDescription(t('Unique automatically generated numeric code that is used to quickly access the session.'))
    ->setDefaultValueCallback('_la_pills_unique_session_numeric_code')
    ->addConstraint('UniqueField')
    ->setInitialValue('')
    ->setPropertyConstraints('value', [
      'Length' => [
        'min' => 6,
      ],
      'Regex' => [
        'pattern' => '/^[0-9]+$/',
        'message' => 'Code could only consist of numbers.',
      ],
    ])
    ->setSettings([
      'max_length' => '25',
      'is_ascii' => TRUE,
      'text_processing' => 0,
    ])
    ->setDisplayOptions('view', [
      'label' => 'above',
      'type' => 'string',
      'weight' => 1,
    ])
    ->setDisplayOptions('form', [
      'type' => 'hidden',
      'weight' => 1,
    ])
    ->setRequired(TRUE);
  $update_manager
    ->installFieldStorageDefinition('code', 'session_entity', 'la_pills', $code);
  $update_manager
    ->applyUpdates();

  $result = $connection->select('session_entity', 'se')
    ->fields('se', ['id'])
    ->execute();
  foreach ($result as $record) {
    $connection->update('session_entity')
      ->fields([
        'code' => $code_manager->generateUniqueCode('session_entity', 'code', 6),
      ])
      ->condition('id', $record->id)
      ->execute();
  }
}

/**
 * Adds require_name field to session_entity.
 * Adds name column to session_questionnaire_answer table.
 */
function la_pills_update_8004() {
  $connection = \Drupal::service('database');
  $update_manager = \Drupal::entityDefinitionUpdateManager();

  $spec = [
    'description' => 'Anonymous user name if required or NULL.',
    'type' => 'varchar',
    'length' => 128,
    'not null' => FALSE,
    'default' => NULL,
  ];

  $connection->schema()->addField('session_questionnaire_answer', 'name', $spec);

  $require_name = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Require name'))
    ->setDescription(t('A boolean indicating whether the LA Pills Session requires anonymous users to provide a name or not.'))
    ->setDefaultValue(FALSE)
    ->setInitialValue(FALSE)
    ->setDisplayOptions('form', [
      'type' => 'boolean_checkbox',
      'weight' => 0,
    ]);

  $update_manager
    ->installFieldStorageDefinition('require_name', 'session_entity', 'la_pills', $require_name);
  $update_manager
    ->applyUpdates();
}

/**
 * Sets answer column on session_questionnaire_answer to allow NULL values.
 */
function la_pills_update_8005() {
  $spec = [
    'description' => 'Answer provided.',
    'type' => 'text',
    'size' => 'medium',
    'not null' => FALSE,
  ];

  $connection = \Drupal::service('database');
  $connection->schema()->changeField('session_questionnaire_answer', 'answer', 'answer', $spec);
}
